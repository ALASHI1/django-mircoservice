name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Enables manual run for `apply` job

jobs:
  terraform:
    name: Terraform Lint and Plan
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v3

      - name: Show current directory contents
        run: ls -R

      - name: 🔧 Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~> 1.6.0 # Allow minor version updates

      - name: 🧹 Terraform Format Check
        run: terraform fmt -check -recursive

      - name: 🧪 Terraform Init
        run: terraform init

      - name: 🔍 Terraform Validate
        run: terraform validate

      - name: 📝 Terraform Plan
        run: terraform plan -out=tfplan

      - name: 📦 Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  apply:
    name: Apply Infrastructure (Manual Trigger)
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' # Apply only if changes are pushed to main branch

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v3

      - name: 🔧 Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~> 1.6.0 # Allow minor version updates

      - name: 🔄 Terraform Init
        run: terraform init

      - name: 📥 Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: 🔥 Terraform Apply (Manual Approval Required)
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }} # Use a secret for the region
